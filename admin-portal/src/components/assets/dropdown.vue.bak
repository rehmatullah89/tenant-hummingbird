<template>


    <div class="listbox-area">
        <div class="left-area">
            <div id="exp_wrapper">
                <button aria-haspopup="listbox"
                        aria-labelledby="exp_elem exp_button"
                        id="exp_button"
                >
                    Neptunium
                </button>
                <ul id="exp_elem_list"
                    tabindex="-1"
                    role="listbox"
                    aria-labelledby="exp_elem"
                    class="hidden">
                    <li id="exp_elem_Np" role="option">
                        Neptunium
                    </li>
                    <li id="exp_elem_Pu" role="option">
                        Plutonium
                    </li>
                    <li id="exp_elem_Am" role="option">
                        Americium
                    </li>
                    <li id="exp_elem_Cm" role="option">
                        Curium
                    </li>
                    <li id="exp_elem_Bk" role="option">
                        Berkelium
                    </li>
                    <li id="exp_elem_Cf" role="option">
                        Californium
                    </li>
                    <li id="exp_elem_Es" role="option">
                        Einsteinium
                    </li>
                    <li id="exp_elem_Fm" role="option">
                        Fermium
                    </li>
                    <li id="exp_elem_Md" role="option">
                        Mendelevium
                    </li>
                    <li id="exp_elem_No" role="option">
                        Nobelium
                    </li>
                    <li id="exp_elem_Lr" role="option">
                        Lawrencium
                    </li>
                    <li id="exp_elem_Rf" role="option">
                        Rutherfordium
                    </li>
                    <li id="exp_elem_Db" role="option">
                        Dubnium
                    </li>
                    <li id="exp_elem_Sg" role="option">
                        Seaborgium
                    </li>
                    <li id="exp_elem_Bh" role="option">
                        Bohrium
                    </li>
                    <li id="exp_elem_Hs" role="option">
                        Hassium
                    </li>
                    <li id="exp_elem_Mt" role="option">
                        Meitnerium
                    </li>
                    <li id="exp_elem_Ds" role="option">
                        Darmstadtium
                    </li>
                    <li id="exp_elem_Rg" role="option">
                        Roentgenium
                    </li>
                    <li id="exp_elem_Cn" role="option">
                        Copernicium
                    </li>
                    <li id="exp_elem_Nh" role="option">
                        Nihonium
                    </li>
                    <li id="exp_elem_Fl" role="option">
                        Flerovium
                    </li>
                    <li id="exp_elem_Mc" role="option">
                        Moscovium
                    </li>
                    <li id="exp_elem_Lv" role="option">
                        Livermorium
                    </li>
                    <li id="exp_elem_Ts" role="option">
                        Tennessine
                    </li>
                    <li id="exp_elem_Og" role="option">
                        Oganesson
                    </li>
                </ul>
            </div>
        </div>
    </div>




    <!--<div :class="{'show': openSuggestion }" v-on-clickaway="away" class="btn-group multi-select" >-->
        <!--<button-->
                <!--v-on:click.prevent="toggleOpen"-->
                <!--class="dropdown-selected btn btn-default"-->
                <!--:class="triggerClass"-->
                <!--v-html="displaySelected"-->
                <!--:style="{minWidth: width + 'px' }">-->

        <!--</button>-->
        <!--<button v-on:click.prevent="toggleOpen" class="btn btn-trigger" :class="triggerClass"><i class="fa fa-caret-down"></i></button>-->
        <!--<ul class="dropdown-menu">-->
            <!--<li v-show="hasEmpty" v-on:click="suggestionClick(null)">{{ placeholder || ' - ' }}</li>-->
            <!--<li v-for="suggestion, i in list" v-on:click="suggestionClick(suggestion)" v-html="display(suggestion)"></li>-->
        <!--</ul>-->
    <!--</div>-->
</template>



<script type="text/babel">


    export default{
        data(){
            return{
                open: false,
                current: 0,
                suggestions: [],
            }
        },
        computed:{
            //The flag
            openSuggestion () {

                return this.open === true;
            },
            displaySelected(){
                var _this = this;
                if(!_this.value) return this.placeholder ||  ' - ';
                if(_this.id && _this.label && _this.value){
                    var s = _this.list.filter( l => { return l[_this.id] == _this.value });
                    if(!s.length) this.placeholder ||  ' - ';

                    var display = s[0];
                    return this.display(display);

                }


                return _this.value;
            }
        },
        filters:{},
        methods: {


            display(value){

                if(typeof value == 'object' && this.label){
                    var parts = this.label.split( "." ),
                            length = parts.length,
                            i,
                            property = value || this;
                    for ( i = 0; i < length; i++ ) {
                        property = property[parts[i]];
                    }

                    return property;
                }
                return value || " - "

            },
            toggleOpen (){
                this.open = !this.open;
            },
            change() {
                if (this.open == false) {
                    this.open = true;
                    this.current = 0;
                }
            },
            //When one of the suggestion is clicked
            suggestionClick(suggestion) {
                if(!suggestion){
                    this.$emit('input',null);
                } else if(typeof suggestion == 'object' && this.id && this.label){
                    this.$emit('input', suggestion[this.id]);
                } else {
                    this.$emit('input', suggestion);
                }
                this.away();
                this.$emit('blur');

            },
            setValue(){
            },
            away: function() {
                this.open = false;
            }

        },
        mixins: [ clickaway ],
        mounted (){},
        props: {
            width: {
                type: String,
                required: false
            },
            list: {
                type: Array,
                required: false
            },
            value: {
                type: String,
                required: false
            },
            default:{
                type: String,
                required: false
            },
            placeholder: {
                type: String,
                required: false,
                default: ''
            },
            multi: {
                type: Boolean,
                required: false
            },
            hasEmpty: {
                type: Boolean,
                required: false,
                default: false
            },
            triggerClass:{
                type: String,
                required: false
            },
            id:{
                type: String,
                required: false
            },
            label:{
                type: String,
                required: false
            }
        },

    }
</script>
<style scoped>

    .annotate{
        font-style: italic;
        color: #366ED4;
    }

    .listbox-area {
        font-size: 0px;
    }

    .left-area, .right-area {
        box-sizing: border-box;
        display: inline-block;
        font-size: 14px;
        vertical-align: top;
        width: 50%;
    }

    .left-area {
        padding-right: 10px;
    }

    .right-area {
        padding-left: 10px;
    }

    [role="listbox"] {
        min-height: 18em;
        padding: 0px;
        background: white;
        border: 1px solid #aaa;
    }

    [role="option"] {
        display: block;
        padding: 0 1em;
        position: relative;
        line-height: 1.8em;
    }

    [role="option"].focused {
        background: #bde4ff;
    }

    [role="option"][aria-selected] {
        padding-left: 1.5em;
    }

    [role="option"][aria-selected="true"]::before {
        content: 'âœ“';
        position: absolute;
        left: 0.5em;
    }


    #exp_elem_list li:hover{
        background-color: #f5f5f5;
    }

    button {
        font-size: 16px;
    }

    button[aria-disabled="true"] {
        opacity: 0.5;
    }

    .move-right-btn {
        padding-right: 20px;
        position: relative;
    }

    .move-right-btn::after {
        content: ' ';
        height: 10px;
        width: 12px;
        /*background-image: url('../imgs/Arrows-Right-icon.png');*/
        background-position: center right;
        position: absolute;
        right: 2px;
        top: 6px;
    }

    .move-left-btn {
        padding-left: 20px;
        position: relative;
    }

    .move-left-btn::after {
        content: ' ';
        height: 10px;
        width: 12px;
        /*background-image: url('../imgs/Arrows-Left-icon.png');*/
        background-position: center left;
        position: absolute;
        left: 2px;
        top: 6px;
    }

    #ss_elem_list {
        max-height: 18em;
        overflow-y: auto;
        position: relative;
    }

    #exp_button {
        border-radius: 0;
        font-size: 16px;
        text-align: left;
        padding: 5px 10px;
        width: 150px;
        position: relative;
    }

    #exp_button::after {
        width: 0;
        height: 0;
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        border-top: 8px solid #aaa;
        content: " ";
        position: absolute;
        right: 5px;
        top: 10px;
    }

    #exp_button[aria-expanded="true"]::after {
        width: 0;
        height: 0;
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        border-top: 0;
        border-bottom: 8px solid #aaa;
        content: " ";
        position: absolute;
        right: 5px;
        top: 10px;
    }

    #exp_elem_list {
        border-top: 0;
        max-height: 10em;
        overflow-y: auto;
        position: absolute;
        margin: 0;
        width: 148px;
    }

    .hidden {
        display: none;
    }

    .toolbar {
        font-size: 0;
    }

    .toolbar-item {
        border: 1px solid #aaa;
        background: #ccc;
    }

    .toolbar-item[aria-disabled="false"]:focus {
        background-color: #eee;
    }

    .offscreen {
        clip: rect(1px 1px 1px 1px);
        clip: rect(1px, 1px, 1px, 1px);
        font-size: 14px;
        height: 1px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap;
        width: 1px;
    }
</style>
