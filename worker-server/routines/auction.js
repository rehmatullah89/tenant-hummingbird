
var moment      = require('moment');
var models      = require(__dirname + '/../models');
var utils    	= require(__dirname + '/../modules/utils.js');
var e 			= require(__dirname + '/../modules/error_handler.js');
var Enums 		= require(__dirname + '/../modules/enums.js');
var db 			= require(__dirname + '/../modules/db_handler.js');

var AuctionRoutines = {

	async auctionDayRoutine(data){
		try{
			var connection = await db.getConnectionByType('write', data.cid);

			let date = data.date;
			let property_id = data.property_id;

			let property = new Property({id: data.property_id});
			await property.find(connection);

			//Getting all auction leases
			let auction_day_leases = await Lease.findAuctionLeases(connection, {property_id, date, status: Enums.LEASE_AUCTION_STATUS.SCHEDULED});
			console.log("Auction Leases: ", auction_day_leases);

			await connection.beginTransactionAsync();

			for(let i = 0; i < auction_day_leases.length; i++){

				//Setting the lease auction status to auction_day
				await models.Lease.save(connection, {auction_status: Enums.LEASE_AUCTION_STATUS.AUCTION_DAY}, auction_day_leases[i].id);

				//Dismiss all auctions related tasks for this lease
				await Todo.dismissTasks(connection, auction_day_leases[i].id, Enums.EVENT_TYPES_COLLECTION.AUCTION, Enums.TASK_TYPE.LEASE);

				//Creating new auction day task for the lease
				let event_types = await models.Event.findEventTypes(connection);
				let type = event_types.find(e => e.slug === Enums.EVENT_TYPES.DELINQUECY.AUCTION_DAY);
	
				let datetime = date ? moment(date, 'YYYY-MM-DD'): moment();
	
				let event = new Event({
					company_id: property.company_id,
					created_by: null,
					start_date: datetime.startOf('day').utc().format('YYYY-MM-DD HH:mm:ss'),
					title: type.name,
					details: "This event was autogenerated from a worker auction_day routine.",
					duration: 0,
					is_all_day: 0,
					upload_id: null,
					event_type_id: type.id,
					type: type.name,
					end_date: null
				});
	
				await event.save(connection);
				await event.saveEventObject(connection, auction_day_leases[i].id, Enums.TASK_TYPE.LEASE);
	
				let todo = new Todo({
					original_date: datetime.endOf('day').utc().format('YYYY-MM-DD HH:mm:ss'),
					created_by: null,
					object_id: auction_day_leases[i].id,
					event_id: event.id,
					details: e.details,
					snoozed_count: 0,
					completed: 0,
					contact_id: null
				});
	
				await todo.save(connection);
				
			}

			await connection.commitAsync();

		} catch(err) {
			await connection.rollbackAsync();
	        try{
                console.log(err.stack);
	        } catch(err) {
		        console.log(err);
			}
			await utils.closeConnection(pool, connection);
			throw err;
        } finally {
			await db.closeConnection(connection);
		}
	},

}


module.exports = {
	auctionDayRoutine: async(data) =>{
		return await AuctionRoutines.auctionDayRoutine(data);
	},
};

var Todo 		= require(__dirname + '/../classes/todo.js');
var Event      	= require(__dirname + '/../classes/event.js');
var Lease      	= require(__dirname + '/../classes/lease.js');
var Property 	= require(__dirname + '/../classes/property.js');
